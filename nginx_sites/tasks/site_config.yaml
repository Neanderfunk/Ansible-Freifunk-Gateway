- name: Erstelle vhost Ordner in /var/www
  file:
    path: "/var/www/{{ item.hauptdomain }}"
    state: directory
    owner: www-data
    group: www-data
  loop: "{{ nginx_sites_domains }}"
  when: item.hauptdomain is defined
  become: yes

- name: Erstelle vhost Unterordner private in /var/www
  file:
    path: "/var/www/{{ item.hauptdomain }}/private"
    state: directory
    owner: www-data
    group: www-data
  loop: "{{ nginx_sites_domains }}"
  when: item.hauptdomain is defined
  become: yes

- name: Erstelle vhost Unterordner web in /var/www
  file:
    path: "/var/www/{{ item.hauptdomain }}/web"
    state: directory
    owner: www-data
    group: www-data
  loop: "{{ nginx_sites_domains }}"
  when: item.hauptdomain is defined
  become: yes

- name: Erstelle vhost Unterordner log in /var/www
  file:
    path: "/var/www/{{ item.hauptdomain }}/log"
    state: directory
    owner: www-data
    group: www-data
  loop: "{{ nginx_sites_domains }}"
  when: item.logdir|default( 'no' | bool )
  become: yes


- name: Erstelle nginx vhost Konfiguration
  template:
    src: "{{ item.template|default(nginx_vhost_template) }}"
    dest: "/etc/nginx/sites-available/{{ item.filename|default(item.hauptdomain) }}"
  loop: "{{ nginx_sites_domains }}"
  when: item.hauptdomain is defined
  notify: reload nginx
  become: yes

- name: Remove managed vhost config files.
  file:
    path: "/etc/nginx/sites-available/{{ item.filename|default(item.hauptdomain) }}"
    state: absent
  when: item.state|default('present') == 'absent'
  loop: "{{ nginx_sites_domains }}"
  notify: reload nginx
  become: yes


- name: Enable vhost config files.
  file:
    src: "{{ item.enabled | ternary('/etc/nginx/sites-available/' + item.filename|default(item.hauptdomain), omit, omit) }}"
    path: "/etc/nginx/sites-enabled/{{ item.filename|default(item.hauptdomain) }}"
    state: "{{ item.enabled | ternary('link', 'absent', 'absent') }}"
  loop: "{{ nginx_sites_domains }}"
  notify: reload nginx
  become: yes
